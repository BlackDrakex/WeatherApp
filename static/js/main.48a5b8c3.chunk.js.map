{"version":3,"sources":["components/InputForm.js","components/AppHeader.js","containers/SideMenu.js","components/TempDisplay.js","components/WeatherInfo.js","components/TimeOfDayWeather.js","components/ForecastDay.js","components/WeatherSideMenu.js","containers/Card.js","components/GridLayout.js","components/Title.js","components/DayCycle.js","components/ToggleButton.js","components/CrossButton.js","components/WeatherCard.js","components/WeatherCardWithSideMenu.js","App.js","serviceWorker.js","index.js"],"names":["Form","styled","form","_templateObject","Input","input","_templateObject2","Button","button","_templateObject3","InputForm","state","value","handleChange","event","_this","setState","target","handleSubmit","preventDefault","props","onSubmit","_this$props","this","placeholder","text","react_default","a","createElement","type","onChange","React","Component","Header","div","AppHeader_templateObject","theme","main","AppHeader","SideMenuBody","SideMenu_templateObject","sideMenu","SideMenu","className","children","Display","TempDisplay_templateObject","Temperature","h2","TempDisplay_templateObject2","big","Weather","p","TempDisplay_templateObject3","centered","TempDisplay","temperature","weather","WeatherInfoBody","WeatherInfo_templateObject","WeatherInfo","humidity","windSpeed","pressure","Container","TimeOfDayWeather_templateObject","RightField","TimeOfDayWeather_templateObject2","Time","TimeOfDayWeather_templateObject3","StyledTempDisplay","_templateObject4","TimeOfDayWeather","timeOfDay","components_WeatherInfo","Day","ForecastDay_templateObject","WeekDay","ForecastDay_templateObject2","DayName","ForecastDay_templateObject3","ForecastDay","_ref","day","date","map","e","components_TimeOfDayWeather","Layout","WeatherSideMenu_templateObject","WeatherSideMenu","containers_SideMenu","forecast","components_ForecastDay","CardBody","Card_templateObject","card","Card","GridLayout_templateObject","rows","join","columns","GridLayout","GridLayout_Layout","TitleBody","Title_templateObject","Title","DayCycle_templateObject","DayCycle","DayCycle_Container","sunrise","sunset","ToggleButton_templateObject","ToggleButton","ToggleButton_Button","onClick","Cross","CrossButton_templateObject","CrossButton","StyledToggle","WeatherCard_templateObject","StyledCrossButton","WeatherCard_templateObject2","WeatherCard_templateObject3","WeatherCard","cityName","containers_Card","remove","components_GridLayout","components_Title","WeatherCard_StyledTempDisplay","components_DayCycle","toggle","WeatherCardWithSideMenu_templateObject","open","StyledSideMenu","WeatherCardWithSideMenu_templateObject2","StyledCard","WeatherCardWithSideMenu_templateObject3","WeatherCardWithSideMenu","WeatherCardWithSideMenu_Container","setValuesToObjectProps","object","slice","length","pop","API_KEY","TimeZone_API","days","timesOfDay","timeOptions","hour","minute","dateOptions","month","GlobalStyles","createGlobalStyle","App_templateObject","App_templateObject2","bgColor","AppBody","section","App_templateObject3","AppOutput","App_templateObject4","secondary","InputField","_templateObject5","StyledWeatherCard","_templateObject6","css","_templateObject7","App","cards","getTimeZoneOffset","_callee","lat","lon","apiRequest","timeZoneResponse","timeZoneOffset","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","status","abrupt","json","resourceSets","resources","timeZone","convertedTime","utcOffsetWithDst","stop","parseWeatherForecast","forecastList","offset","validDates","result","_loop","i","_j","newDate","Date","dt","getHours","j","some","push","element","Math","round","temp","wind","speed","windDirection","deg","toLocaleString","getDay","submitHandler","getCurrentWeather","then","success","storeCity","incrementStage","city","getForecastWeather","prevState","Object","objectSpread","defineProperty","stage","decrementStage","removeCity","removeStoredCity","currentCities","localStorage","getItem","setItem","storedCities","filteredCities","split","filter","elem","_callee2","weather_api","targetTimeZoneOffset","localTimeZoneOffset","_context2","coord","getTimezoneOffset","name","sys","country","_callee3","_context3","list","forEach","_this2","keys","assign","App_Container","components_AppHeader","components_InputForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48a5b8c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Form = styled.form`\r\n  flex: 1;\r\n  display: grid;\r\n  grid-template-columns: 3fr 1fr;\r\n  grid-column-gap: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0 3px;\r\n  border: 2px solid orangered;\r\n  border-radius: 5px;\r\n  background: transparent;\r\n  color: white;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 2px 4px;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.4);\r\n  background: orangered;\r\n  \r\n  &:active {\r\n    transform: translate(1px, 1px);\r\n    box-shadow: none;\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nclass InputForm extends React.Component {\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      value: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.value);\r\n\r\n    this.setState({\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { placeholder, text } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Input type={\"text\"}\r\n               value={this.state.value}\r\n               onChange={this.handleChange}\r\n               placeholder={placeholder}/>\r\n        <Button type={\"Submit\"}>{text}</Button>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputForm","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\nimport InputForm from \"./InputForm\";\r\n\r\nconst Header = styled.div`\r\n  position: relative;\r\n  z-index: 10;\r\n  border-radius: 2px 2px 0 0;\r\n  background: ${props => props.theme.main || \"#412198\"};\r\n`;\r\n\r\nconst AppHeader = props => {\r\n  return (\r\n    <Header>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\n\r\nconst SideMenuBody = styled.div`\r\n  position: relative;\r\n  padding: 10px 20px;\r\n  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n  background: ${props => props.theme.sideMenu || \"linear-gradient(45deg, #CF3BEF 0%,#BA28DB 100%)\"};\r\n`;\r\n\r\nconst SideMenu = props => {\r\n  return (\r\n    <SideMenuBody className={props.className}>{props.children}</SideMenuBody>\r\n  );\r\n};\r\n\r\nexport default SideMenu;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Display = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nconst Temperature = styled.h2`\r\n  font-size: ${props => props.big ? \"3em\" : \"1.5em\"};\r\n`;\r\n\r\nconst Weather = styled.p`\r\n  font-size: ${props => props.big ? \"1.5em\" : \"0.75em\"};\r\n  text-align: ${props => props.centered ? \"center\" : \"end\"};\r\n`;\r\n\r\nconst TempDisplay = props => {\r\n  return (\r\n    <Display className={props.className}>\r\n      <Temperature big={props.big}>{props.temperature}°C</Temperature>\r\n      <Weather big={props.big} centered={props.centered}>{props.weather}</Weather>\r\n    </Display>\r\n  )\r\n};\r\n\r\nexport default TempDisplay;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\n\r\nconst WeatherInfoBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst WeatherInfo = props => {\r\n  const { humidity, windSpeed, pressure } = props;\r\n  return (\r\n    <WeatherInfoBody className={props.className}>\r\n      <p>Humidity: {humidity}%</p>\r\n      <p>Wind: {windSpeed}m/s</p>\r\n      <p>Pressure: {pressure}mm</p>\r\n    </WeatherInfoBody>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TempDisplay from \"./TempDisplay\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.4);\r\n  padding: 5px 10px;\r\n  background: white;\r\n  \r\n  @media (min-width: 900px) and (max-width: 1199px) {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  @media (max-width: 599px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst RightField = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n\r\nconst Time = styled.p`\r\n  align-self: flex-end;\r\n  margin-bottom: 8px;\r\n  \r\n  @media (max-width: 599px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst StyledTempDisplay = styled(TempDisplay)`\r\n  flex: 1;\r\n`;\r\n\r\nconst TimeOfDayWeather = props => {\r\n  const { humidity, windSpeed, pressure, temperature, weather, timeOfDay } = props;\r\n  return (\r\n    <Container className={props.className}>\r\n      <WeatherInfo humidity={humidity}\r\n                 windSpeed={windSpeed}\r\n                 pressure={pressure} />\r\n      <RightField>\r\n        <Time>{timeOfDay}</Time>\r\n        <StyledTempDisplay temperature={temperature} weather={weather}/>\r\n      </RightField>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TimeOfDayWeather;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\nimport TimeOfDayWeather from \"./TimeOfDayWeather\";\r\n\r\nconst Day = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst WeekDay = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst DayName = styled.h2`\r\n  @media (max-width: 599px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ForecastDay = ({ day }) => {\r\n  return (\r\n    <Day>\r\n      <WeekDay>\r\n        <DayName>{day[0].day}</DayName>\r\n        <p>{day[0].date}</p>\r\n      </WeekDay>\r\n      {day.map(e => <TimeOfDayWeather {...e}/>)}\r\n    </Day>\r\n  );\r\n};\r\n\r\nexport default ForecastDay;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\nimport SideMenu from \"../containers/SideMenu\";\r\nimport ForecastDay from \"./ForecastDay\";\r\n\r\nconst Layout = styled.div`\r\n  flex: 1;\r\n  \r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-gap: 15px;\r\n  \r\n  @media (max-width: 899px) {\r\n    grid-auto-flow: row;\r\n    grid-gap: 5px;\r\n  }\r\n`;\r\n\r\nconst WeatherSideMenu = props => {\r\n  return (\r\n    <SideMenu className={props.className}>\r\n      <Layout>\r\n        {props.forecast.map(day => <ForecastDay day={day}/>)}\r\n      </Layout>\r\n    </SideMenu>\r\n  );\r\n};\r\n\r\nexport default WeatherSideMenu;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CardBody = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.4);\r\n  z-index: 10;\r\n  \r\n  background: ${props => props.theme.card || \"linear-gradient(to bottom, #BA28DB 0%, #AA18CB 100%)\"};\r\n`;\r\n\r\nconst Card = props => {\r\n  return (\r\n    <CardBody className={props.className}>{props.children}</CardBody>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-rows: ${props => props.rows ? props.rows.join('fr ') + 'fr' : '1fr'};\r\n  grid-template-columns: ${props => props.columns ? props.columns.join('fr ') + 'fr' : '1fr'};\r\n`;\r\n\r\nconst GridLayout = props => {\r\n  return (\r\n    <Layout rows={props.rows} columns={props.columns}>{props.children}</Layout>\r\n  );\r\n};\r\n\r\nexport default GridLayout;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\n\r\nconst TitleBody = styled.h2`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = props => {\r\n  return (\r\n    <TitleBody>{props.children}</TitleBody>\r\n  );\r\n};\r\n\r\nexport default Title;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst DayCycle = props => {\r\n  return (\r\n    <Container>\r\n      <p>{props.sunrise}</p>\r\n      <p>{props.sunset}</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DayCycle;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Button = styled.button`\r\n  padding: 2px 6px;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: orangered;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  &:active {\r\n    box-shadow: inset 0 0 2px 2px rgba(0, 0, 0, 0.4);\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst ToggleButton = props => {\r\n  return (\r\n    <Button onClick={props.onClick} className={props.className}>{props.text}</Button>\r\n  );\r\n};\r\n\r\nexport default ToggleButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Cross = styled.button`\r\n  position: relative;\r\n  width: 20px;\r\n  height: 20px;\r\n  background: transparent;\r\n  border: none;\r\n  \r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 1px;\r\n    top: calc(50% - 0.5px);\r\n    left: 0;\r\n    transform:  rotate(-45deg);\r\n    background: black;\r\n  }\r\n  \r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 100%;\r\n    top: 0;\r\n    left: calc(50% - 0.5px);\r\n    transform:  rotate(-45deg);\r\n    background: black;\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  &:active {\r\n    transform: translate(1px, 1px);\r\n  }\r\n`;\r\n\r\nconst CrossButton = props => {\r\n  return (\r\n    <Cross className={props.className} onClick={props.onClick} />\r\n  );\r\n};\r\n\r\nexport default CrossButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Card from \"../containers/Card\";\r\nimport GridLayout from \"./GridLayout\";\r\nimport Title from \"./Title\";\r\nimport TempDisplay from \"./TempDisplay\";\r\nimport DayCycle from \"./DayCycle\";\r\nimport ToggleButton from \"./ToggleButton\";\r\nimport CrossButton from \"./CrossButton\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\n\r\n\r\nconst StyledToggle = styled(ToggleButton)`\r\n  margin: 5px 15px;\r\n`;\r\n\r\nconst StyledCrossButton = styled(CrossButton)`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n`;\r\n\r\nconst StyledTempDisplay = styled(TempDisplay)`\r\n  align-self: center;\r\n`;\r\n\r\nconst WeatherCard = props => {\r\n  const { cityName, temperature, weather, humidity, windSpeed, pressure, sunrise, sunset } = props;\r\n  return (\r\n      <Card className={props.className}>\r\n        <StyledCrossButton onClick={props.remove}/>\r\n        <GridLayout rows={[1, 2, 3, 2, 1]}>\r\n          <Title>{cityName}</Title>\r\n          <StyledTempDisplay temperature={temperature}\r\n                       weather={weather}\r\n                       centered big/>\r\n          <WeatherInfo humidity={humidity}\r\n                       windSpeed={windSpeed}\r\n                       pressure={pressure}/>\r\n          <DayCycle sunrise={sunrise} sunset={sunset}/>\r\n          <StyledToggle text={\"Forecast\"} onClick={props.toggle}/>\r\n        </GridLayout>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport propTypes from 'prop-types'\r\nimport WeatherSideMenu from \"./WeatherSideMenu\";\r\nimport WeatherCard from \"./WeatherCard\";\r\n\r\nconst open = `\r\n  @media (max-width: 899px) {\r\n    grid-template-rows: 1fr 3fr;\r\n    grid-row-end: span 4;\r\n  }\r\n  @media (min-width: 900px) {\r\n    grid-template-columns: 1fr 3fr;\r\n    grid-column-end: span 4;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  display: grid;\r\n  \r\n  ${props => props.open && open}\r\n`;\r\n\r\nconst StyledSideMenu = styled(WeatherSideMenu)`\r\n  position: relative;\r\n  z-index: 3;\r\n  margin: 20px 20px 20px -20px;\r\n  border-radius: 0 5px 5px 0;\r\n  \r\n  @media (max-width: 899px) {\r\n    margin: -20px 20px 20px 20px;\r\n    border-radius: 0 0 5px 5px;\r\n  }\r\n`;\r\n\r\nconst StyledCard = styled(WeatherCard)`\r\n  position: relative;\r\n  z-index: 5;\r\n  margin: 20px;\r\n`;\r\n\r\nconst WeatherCardWithSideMenu = props => {\r\n  const { cityName, temperature, weather, humidity, windSpeed, pressure, sunrise, sunset, forecast } = props;\r\n\r\n  return (\r\n    <Container open={props.open}>\r\n      <StyledCard cityName={cityName}\r\n                   temperature={temperature}\r\n                   weather={weather}\r\n                   humidity={humidity}\r\n                   windSpeed={windSpeed}\r\n                   pressure={pressure}\r\n                   sunrise={sunrise}\r\n                   sunset={sunset}\r\n                   remove={props.remove}\r\n                   toggle={props.toggle}/>\r\n      {props.open && <StyledSideMenu forecast={forecast}/>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WeatherCardWithSideMenu;","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport InputForm from \"./components/InputForm\";\r\nimport AppHeader from \"./components/AppHeader\";\r\nimport WeatherCardWithSideMenu from \"./components/WeatherCardWithSideMenu\";\r\n\r\nfunction setValuesToObjectProps(props, value, object) {\r\n  props = props.slice();\r\n  while (props.length) object[props.pop()] = value;\r\n}\r\n\r\nconst API_KEY = 'db9072c49ae714096027e364cc2f3d97';\r\nconst TimeZone_API = \"AtZXuLgTcqINybvNxDwkEi2zQZ-ZT07_34zj8AYJTWBydl8hmNOqSLn2b6qI7Y-a\";\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nconst timesOfDay = {};\r\nsetValuesToObjectProps([6, 7, 8], 'Morning', timesOfDay);\r\nsetValuesToObjectProps([12, 13, 14], 'Afternoon', timesOfDay);\r\nsetValuesToObjectProps([21, 22, 23], 'Evening', timesOfDay);\r\nsetValuesToObjectProps([0, 1, 2], 'Night', timesOfDay);\r\n\r\nconst timeOptions = {hour: '2-digit', minute: '2-digit'};\r\nconst dateOptions = {month: '2-digit', day: '2-digit'};\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  background: ${props => props.theme.bgColor || \"linear-gradient(45deg, #7349e5 0%,#ad1283 76%,#ad1283 100%)\"};\r\n`;\r\n//Вынести Container в отдельный компонент\r\n\r\nconst AppBody = styled.section`\r\n  position: relative;\r\n  margin: 5vh 0;\r\n  width: 95%;\r\n  max-width: 1400px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.4);\r\n  display: grid;\r\n  \r\n  border: 2px solid ${props => props.theme.main || \"#412198\"};\r\n\r\n  @media (max-width: 599px) {\r\n    grid-template-rows: 100px minmax(400px, 1fr);\r\n  }\r\n\r\n  @media (min-width: 600px) and (max-width: 899px) {\r\n    grid-template-rows: 180px minmax(720px, 1fr);\r\n    width: 75%;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-template-rows: 140px minmax(560px, 1fr);\r\n  }\r\n`;\r\n\r\nconst AppOutput = styled.div`\r\n  position: relative;\r\n  z-index: 5;\r\n  border-radius: 0 0 2px 2px;\r\n  box-shadow: inset 0 0 3px 3px rgba(0, 0, 0, 0.4);\r\n  display: grid;\r\n\r\n  background: ${props => props.theme.secondary || \"#7349E5\"};\r\n\r\n  @media (max-width: 599px) {\r\n    grid-auto-rows: 400px;\r\n  }\r\n\r\n  @media (min-width: 600px) and (max-width: 899px) {\r\n    grid-auto-rows: 720px;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-auto-rows: 560px;\r\n  }\r\n`;\r\n\r\nconst InputField = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 10;\r\n  padding: 5px 10px;\r\n  border-radius: 0 0 5px 5px;\r\n  box-shadow: 0 0 3px 3px rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  \r\n  background: ${props => props.theme.main || \"#412198\"};\r\n`;\r\n\r\nconst StyledWeatherCard = styled(WeatherCardWithSideMenu)`\r\n  ${props => props.open ? \r\n    css`\r\n    @media (max-width: 899px) {\r\n       grid-row-end: span 4;\r\n       grid-template-rows: 1fr 3fr;\r\n    }\r\n     @media (min-width: 900px) {\r\n       grid-template-columns: 1fr 3fr;\r\n       grid-column-end: span 4;\r\n     }` : ''}\r\n`;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    cards: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storedCities = localStorage.getItem(\"weatherAppCitiesAdded\");\r\n    const storedCitiesArr = storedCities ? storedCities.split(\";\") : [];\r\n\r\n    storedCitiesArr.forEach(this.getCurrentWeather);\r\n  }\r\n\r\n  getTimeZoneOffset = async (lat, lon) => {\r\n    const apiRequest = await fetch(`https://dev.virtualearth.net/REST/v1/TimeZone/${lat},${lon}?key=${TimeZone_API}`);\r\n    if (apiRequest.status !== 200) return;\r\n\r\n    const timeZoneResponse = await apiRequest.json();\r\n\r\n    const timeZoneOffset = timeZoneResponse.resourceSets[0].resources[0].timeZone.convertedTime.utcOffsetWithDst;\r\n    return +timeZoneOffset.slice(0, -3) * 3600;\r\n  };\r\n\r\n  parseWeatherForecast = (forecastList, offset) => {\r\n    const validDates = [6, 7, 8, 12, 13, 14, 21, 22, 23, 0, 1, 2];\r\n\r\n    let result = [];\r\n\r\n    for (let i = 0, j = -1; i < forecastList.length; i++) {\r\n      const newDate = new Date( (forecastList[i].dt + offset) * 1000).getHours();\r\n\r\n      if ( newDate === 6 || newDate === 7 || newDate === 8) {\r\n        j++;\r\n        if (j === 4) break;\r\n\r\n        result[j] = [];\r\n      }\r\n\r\n      if (validDates.some(e => e === newDate) && j >= 0) result[j].push(forecastList[i]);\r\n    }\r\n\r\n    result = result.map(element => {\r\n      return element.map(e => {\r\n        let date = new Date( (e.dt + offset) * 1000);\r\n        return {\r\n          temperature: Math.round(e.main.temp),\r\n          pressure: Math.round(e.main.pressure * 0.75006375541921),\r\n          humidity: e.main.humidity,\r\n          windSpeed: e.wind.speed,\r\n          windDirection: e.wind.deg,\r\n          weather: e.weather[0].main,\r\n          timeOfDay: timesOfDay[date.getHours()],\r\n          date: date.toLocaleString('ru', dateOptions),\r\n          day: days[date.getDay()]\r\n        }\r\n      });\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  submitHandler = value => {\r\n    if (this.state.cards[value]) return;\r\n\r\n    this.getCurrentWeather(value)\r\n      .then(success => {\r\n        if (success) this.storeCity(value);\r\n      });\r\n  };\r\n\r\n  incrementStage = city => {\r\n    if (this.state.cards[city].forecast.length === 0) this.getForecastWeather(city);\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        cards: {\r\n          ...prevState.cards,\r\n          [city]: {\r\n            ...prevState.cards[city],\r\n            stage: prevState.cards[city].stage + 1\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  decrementStage = city => {\r\n    this.setState(prevState => {\r\n      return {\r\n        cards: {\r\n          ...prevState.cards,\r\n          [city]: {\r\n            ...prevState.cards[city],\r\n            stage: prevState.cards[city].stage - 1\r\n          }\r\n        }\r\n      }\r\n    })\r\n  };\r\n\r\n  removeCity = city => {\r\n    let cards = {...this.state.cards};\r\n    delete cards[city];\r\n\r\n    this.setState({\r\n      cards\r\n    });\r\n\r\n    this.removeStoredCity(city);\r\n  };\r\n\r\n  storeCity = city => {\r\n    const currentCities = localStorage.getItem(\"weatherAppCitiesAdded\") || \"\";\r\n    localStorage.setItem(\"weatherAppCitiesAdded\", currentCities + \";\" + city);\r\n  };\r\n\r\n  removeStoredCity = city => {\r\n    const storedCities = localStorage.getItem(\"weatherAppCitiesAdded\");\r\n    const filteredCities = storedCities ? storedCities.split(';').filter(elem => elem !== city) : [];\r\n    localStorage.setItem(\"weatherAppCitiesAdded\", filteredCities.join(\";\"));\r\n  };\r\n\r\n  getCurrentWeather = async city => {\r\n    const weather_api = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\r\n    if (weather_api.status !== 200) return;\r\n\r\n    const weather = await weather_api.json();\r\n\r\n    const targetTimeZoneOffset = await this.getTimeZoneOffset(weather.coord.lat, weather.coord.lon);\r\n    const localTimeZoneOffset = new Date().getTimezoneOffset() * 60;\r\n    const timeZoneOffset = targetTimeZoneOffset + localTimeZoneOffset;\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        cards: {\r\n          ...prevState.cards,\r\n          [weather.name]: {\r\n            stage: 1,\r\n            cityName: `${weather.name}, ${weather.sys.country}` ,\r\n            temperature: Math.round(weather.main.temp),\r\n            pressure: Math.round(weather.main.pressure * 0.75006375541921),\r\n            humidity: weather.main.humidity,\r\n            windSpeed: weather.wind.speed,\r\n            windDirection: weather.wind.deg,\r\n            sunrise: new Date( (weather.sys.sunrise + timeZoneOffset) * 1000).toLocaleString('ru', timeOptions),\r\n            sunset: new Date( (weather.sys.sunset + timeZoneOffset) * 1000).toLocaleString('ru', timeOptions),\r\n            weather: weather.weather[0].main,\r\n            timeZoneOffset: timeZoneOffset,\r\n            forecast: []\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return true;\r\n  };\r\n\r\n  getForecastWeather = async city => {\r\n    const weather_api = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\r\n    if (weather_api.status !== 200) return;\r\n\r\n    const weather = await weather_api.json();\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        cards:{\r\n          ...prevState.cards,\r\n          [city]: {\r\n            ...prevState.cards[city],\r\n            forecast: this.parseWeatherForecast(weather.list, prevState.cards[city].timeZoneOffset)\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const cards = Object.keys(this.state.cards).map(city => {\r\n      const card = this.state.cards[city];\r\n\r\n      return (\r\n        <StyledWeatherCard {...card}\r\n                           open={card.stage === 2}\r\n                           toggle={card.stage === 1 ? () => this.incrementStage(city) : () => this.decrementStage(city)}\r\n                           remove={() => this.removeCity(city)}/>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <Container>\r\n        <GlobalStyles/>\r\n        <AppBody>\r\n          <AppHeader/>\r\n          <AppOutput>\r\n            <InputField><InputForm onSubmit={this.submitHandler} text={\"Add City\"}/></InputField>\r\n            {cards}\r\n          </AppOutput>\r\n        </AppBody>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}