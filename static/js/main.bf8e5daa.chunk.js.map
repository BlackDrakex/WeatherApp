{"version":3,"sources":["Services/Weather/weatherAPICalls.js","Services/TimeZone/timeZoneCalls.js","themes.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/SideMenu.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/TempDisplay.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/WeatherInfo.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/TimeOfDayWeather.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/ForecastDay.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/WeatherSideMenu.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/Card.js","components/GridLayout.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/Title.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/DayCycle.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/ToggleButton.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/CrossButton.js","components/WeatherWidget/components/WeatherCardWithSideMenu/components/WeatherCard.js","components/WeatherWidget/components/WeatherCardWithSideMenu/WeatherCardWithSideMenu.js","components/Logo.js","components/ThemeSelector/components/ShinyButton.js","components/ThemeSelector/ThemeSelector.js","components/WeatherWidget/WidgetHeader.js","components/WeatherWidget/components/InputForm.js","components/WeatherWidget/WeatherWidget.js","components/Popup.js","components/Popups/ErrorPopup.js","components/Popups/WarningPopup.js","Services/Translation/YaTranslate.js","App.js","serviceWorker.js","index.js"],"names":["currentWeatherEndpoint","forecastWeatherEndpoint","API_KEY","_callee","city","currentWeatherCall","regenerator_default","a","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","this","getForecastWeather","_x2","_getForecastWeather","apply","arguments","_callee2","forecastCall","_context2","getCurrentWeather","TimeZoneEndpoint","getTimeZoneOffset","lat","lon","timeZone_api","timeZoneResponse","timeZoneOffset","status","resourceSets","resources","timeZone","convertedTime","utcOffsetWithDst","slice","Error","statusText","getDifferenceWithCurrentZone","_x3","_x4","_getDifferenceWithCurrentZone","timeOffset","localTimeZoneOffset","Date","getTimezoneOffset","themes","theme1","bgColor","main","secondary","additional","card","theme2","sideMenu","info","SideMenuBody","styled","div","_templateObject","props","theme","SideMenu","react_default","createElement","className","children","Display","TempDisplay_templateObject","Temperature","h2","_templateObject2","big","Weather","p","_templateObject3","centered","TempDisplay","temperature","weather","defaultProps","WeatherInfoBody","WeatherInfo_templateObject","WeatherInfo","humidity","windSpeed","pressure","Container","TimeOfDayWeather_templateObject","RightField","TimeOfDayWeather_templateObject2","Time","TimeOfDayWeather_templateObject3","StyledTempDisplay","_templateObject4","TimeOfDayWeather","timeOfDay","components_WeatherInfo","Day","ForecastDay_templateObject","WeekDay","ForecastDay_templateObject2","DayName","ForecastDay_templateObject3","ForecastDay","_ref","day","date","map","e","components_TimeOfDayWeather","Object","assign","key","Layout","WeatherSideMenu_templateObject","WeatherSideMenu","components_SideMenu","forecast","components_ForecastDay","CardBody","Card_templateObject","Card","GridLayout_templateObject","rows","join","columns","GridLayout","GridLayout_Layout","TitleBody","Title_templateObject","Title","timeOptions","hour","minute","DayCycle_templateObject","DayCycle","sunrise","toLocaleString","sunset","DayCycle_Container","Button","button","ToggleButton_templateObject","ToggleButton","onClick","text","Cross","CrossButton_templateObject","CrossButton","StyledToggle","WeatherCard_templateObject","StyledCrossButton","WeatherCard_templateObject2","WeatherCard_templateObject3","WeatherCard","cityName","components_Card","remove","components_GridLayout","components_Title","WeatherCard_StyledTempDisplay","components_DayCycle","toggle","WeatherCardWithSideMenu_templateObject","StyledSideMenu","WeatherCardWithSideMenu_templateObject2","StyledCard","WeatherCardWithSideMenu_templateObject3","WeatherCardWithSideMenu","WeatherCardWithSideMenu_Container","open","Body","h1","Logo_templateObject","Logo","ShinyButton_templateObject","color","ShinyButton","pickTheme","ShinyButton_Button","ThemeSelector_templateObject","validColors","ThemeSelector","selectTheme","buttons","keys","currTheme","buttonColor","themeColor","match","length","components_ShinyButton","ThemeSelector_Container","placeholder","Header","WidgetHeader_templateObject","ThemeAndLanguage","WidgetHeader_templateObject2","WidgetHeader","components_Logo","components_ThemeSelector_ThemeSelector","Form","form","InputForm_templateObject","Input","input","InputForm_templateObject2","InputForm_templateObject3","InputForm","state","value","handleChange","event","_this","setState","target","handleSubmit","preventDefault","onSubmit","_this$props","type","onChange","InputForm_Button","React","Component","Widget","section","WeatherWidget_templateObject","WidgetBody","WeatherWidget_templateObject2","WidgetInputField","WeatherWidget_templateObject3","StyledWeatherCard","WeatherWidget_templateObject4","css","_templateObject5","WeatherWidget","cards","increment","decrement","add","weatherCards","stage","WeatherWidget_WidgetHeader","components_InputForm","Box","Popup_templateObject","types","danger","Popup_templateObject2","warning","Popup_templateObject3","Popup_templateObject4","Popup","title","message","Popup_Title","ErrorPopup","components_Popup","WarningPopup","API_ENDPOINT","encodedText","response","jsonResponse","encodeURIComponent","getTranslatedText","setValuesToObjectProps","properties","object","pop","days","timesOfDay","dateOptions","month","GlobalStyles","createGlobalStyle","App_templateObject","App_templateObject2","App","currentTheme","popupShowing","parseWeatherForecast","forecastList","offset","validDates","result","_loop","i","_j","newDate","dt","getHours","j","some","push","element","Math","round","temp","wind","speed","windDirection","deg","getDay","submitHandler","getWeather","storeCity","t0","console","log","showPopup","incrementStage","getForecast","prevState","objectSpread","defineProperty","decrementStage","removeCity","removeStoredCity","currentCities","localStorage","getItem","newItem","setItem","storedCities","filteredCities","split","filter","elem","popup","Popups_ErrorPopup","Popups_WarningPopup","setTimeout","cod","coord","name","sys","country","_callee3","_context3","list","forEach","styled_components_browser_esm","App_Container","components_WeatherWidget_WeatherWidget","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf8e5daa.chunk.js","sourcesContent":["const currentWeatherEndpoint = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst forecastWeatherEndpoint = \"https://api.openweathermap.org/data/2.5/forecast\";\r\nconst API_KEY = 'db9072c49ae714096027e364cc2f3d97';\r\n\r\nasync function getCurrentWeather(city) {\r\n    const currentWeatherCall = await fetch(`${currentWeatherEndpoint}?q=${city}&appid=${API_KEY}&units=metric`);\r\n    return await currentWeatherCall.json();\r\n}\r\n\r\nexport async function getForecastWeather(city) {\r\n    const forecastCall = await fetch(`${forecastWeatherEndpoint}?q=${city}&appid=${API_KEY}&units=metric`);\r\n    return await forecastCall.json();\r\n}\r\n\r\nexport default getCurrentWeather;","const API_KEY = \"AtZXuLgTcqINybvNxDwkEi2zQZ-ZT07_34zj8AYJTWBydl8hmNOqSLn2b6qI7Y-a\";\r\nconst TimeZoneEndpoint = \"https://dev.virtualearth.net/REST/v1/TimeZone/\";\r\n\r\n//returns offset in seconds\r\nasync function getTimeZoneOffset(lat, lon)  {\r\n    const timeZone_api = await fetch(`${TimeZoneEndpoint}${lat},${lon}?key=${API_KEY}`);\r\n\r\n    if (timeZone_api.status === 200) {\r\n\r\n      const timeZoneResponse = await timeZone_api.json();\r\n      const timeZoneOffset = timeZoneResponse.resourceSets[0].resources[0].timeZone.convertedTime.utcOffsetWithDst;\r\n      return +timeZoneOffset.slice(0, -3) * 3600;\r\n\r\n    } else {\r\n      throw new Error(`${timeZone_api.status}, ${timeZone_api.statusText}`);\r\n    }\r\n}\r\n\r\nexport async function getDifferenceWithCurrentZone(lat, lon)  {\r\n    const timeOffset = await getTimeZoneOffset(lat, lon);\r\n    const localTimeZoneOffset = new Date().getTimezoneOffset() * 60;\r\n    return timeOffset + localTimeZoneOffset;\r\n}\r\n\r\n\r\nexport default getTimeZoneOffset;","const themes = {\r\n  theme1: {\r\n    bgColor: \"linear-gradient(45deg, #7349e5 0%,#ad1283 76%,#ad1283 100%)\",\r\n    main: \"#412198\",\r\n    secondary: \"#7349E5\",\r\n    additional: \"#FF4500\",\r\n    card: \"linear-gradient(to bottom, #BA28DB 0%, #AA18CB 100%)\",\r\n  },\r\n  theme2: {\r\n    bgColor: \"#FFB2AD\",\r\n    main: \"#E89EB5\",\r\n    secondary: \"#D796EB\",\r\n    additional: \"#EB86AC\",\r\n    card: \"#FFBAF8\",\r\n    sideMenu: \"#FFBAF8\",\r\n    info: \"#D796EB\"\r\n  }\r\n};\r\n\r\nexport default themes;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, node} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  children: node\r\n};\r\n\r\nconst SideMenuBody = styled.div`\r\n  position: relative;\r\n  padding: 10px 20px;\r\n  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n  background: ${props => props.theme.sideMenu || \"linear-gradient(45deg, #CF3BEF 0%,#BA28DB 100%)\"};\r\n`;\r\n\r\nconst SideMenu = props => {\r\n  return (\r\n    <SideMenuBody className={props.className}>{props.children}</SideMenuBody>\r\n  );\r\n};\r\n\r\nSideMenu.propTypes = PropTypes;\r\n\r\nexport default SideMenu;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, number, bool} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  big: bool,\r\n  centered: bool,\r\n  temperature: number.isRequired,\r\n  weather: string.isRequired\r\n};\r\n\r\nconst DefaultProps = {\r\n  big: false,\r\n  centered: false\r\n};\r\n\r\nconst Display = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nconst Temperature = styled.h2`\r\n  font-size: ${props => props.big ? \"3em\" : \"1.5em\"};\r\n`;\r\n\r\nconst Weather = styled.p`\r\n  font-size: ${props => props.big ? \"1.5em\" : \"0.75em\"};\r\n  text-align: ${props => props.centered ? \"center\" : \"end\"};\r\n`;\r\n\r\nconst TempDisplay = props => {\r\n  return (\r\n    <Display className={props.className}>\r\n      <Temperature big={props.big}>{props.temperature}°C</Temperature>\r\n      <Weather big={props.big} centered={props.centered}>{props.weather}</Weather>\r\n    </Display>\r\n  )\r\n};\r\n\r\nTempDisplay.propTypes = PropTypes;\r\nTempDisplay.defaultProps = DefaultProps;\r\n\r\nexport default TempDisplay;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, number} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  humidity: number.isRequired,\r\n  windSpeed: number.isRequired,\r\n  pressure: number.isRequired\r\n};\r\n\r\nconst WeatherInfoBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst WeatherInfo = props => {\r\n  const { humidity, windSpeed, pressure } = props;\r\n  return (\r\n    <WeatherInfoBody className={props.className}>\r\n      <p>Humidity: {humidity}%</p>\r\n      <p>Wind: {windSpeed}m/s</p>\r\n      <p>Pressure: {pressure}mm</p>\r\n    </WeatherInfoBody>\r\n  );\r\n};\r\n\r\nWeatherInfo.propTypes = PropTypes;\r\n\r\nexport default WeatherInfo;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, number} from 'prop-types'\r\n\r\nimport TempDisplay from \"./TempDisplay\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  humidity: number.isRequired,\r\n  windSpeed: number.isRequired,\r\n  pressure: number.isRequired,\r\n  temperature: number.isRequired,\r\n  weather: string.isRequired,\r\n  timeOfDay: string.isRequired\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.4);\r\n  padding: 5px 10px;\r\n  background: ${props => props.theme.info || \"white\"};\r\n  \r\n  @media (min-width: 900px) and (max-width: 1199px) {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  @media (max-width: 599px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst RightField = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n\r\nconst Time = styled.p`\r\n  align-self: flex-end;\r\n  margin-bottom: 8px;\r\n  \r\n  @media (max-width: 599px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst StyledTempDisplay = styled(TempDisplay)`\r\n  flex: 1;\r\n`;\r\n\r\nconst TimeOfDayWeather = props => {\r\n  const { humidity, windSpeed, pressure, temperature, weather, timeOfDay } = props;\r\n  return (\r\n    <Container className={props.className}>\r\n      <WeatherInfo humidity={humidity}\r\n                 windSpeed={windSpeed}\r\n                 pressure={pressure} />\r\n      <RightField>\r\n        <Time>{timeOfDay}</Time>\r\n        <StyledTempDisplay temperature={temperature} weather={weather}/>\r\n      </RightField>\r\n    </Container>\r\n  );\r\n};\r\n\r\nTimeOfDayWeather.propTypes = PropTypes;\r\n\r\nexport default TimeOfDayWeather;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, array} from 'prop-types'\r\n\r\nimport TimeOfDayWeather from \"./TimeOfDayWeather\";\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  day: array.isRequired\r\n};\r\n\r\nconst DefaultProps = {\r\n  day: [{\r\n    day: \"Monday\",\r\n    date: \"01.01\"\r\n  }]\r\n};\r\n\r\nconst Day = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst WeekDay = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst DayName = styled.h2`\r\n  @media (max-width: 599px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ForecastDay = ({ day }) => {\r\n  return (\r\n    <Day>\r\n      <WeekDay>\r\n        <DayName>{day[0].day}</DayName>\r\n        <p>{day[0].date}</p>\r\n      </WeekDay>\r\n      {day.map(e => <TimeOfDayWeather {...e} key={e.timeOfDay}/>)}\r\n    </Day>\r\n  );\r\n};\r\n\r\nForecastDay.propTypes = PropTypes;\r\nForecastDay.defaultProps = DefaultProps;\r\n\r\nexport default ForecastDay;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, arrayOf, array} from 'prop-types'\r\n\r\nimport SideMenu from \"./SideMenu\";\r\nimport ForecastDay from \"./ForecastDay\";\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  forecast: arrayOf(array)\r\n};\r\n\r\nconst DefaultProps = {\r\n  forecast: [[]]\r\n};\r\n\r\nconst Layout = styled.div`\r\n  flex: 1;\r\n  \r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-gap: 15px;\r\n  \r\n  @media (max-width: 899px) {\r\n    grid-auto-flow: row;\r\n    grid-gap: 5px;\r\n  }\r\n`;\r\n\r\nconst WeatherSideMenu = props => {\r\n  return (\r\n    <SideMenu className={props.className}>\r\n      <Layout>\r\n        {props.forecast.map(day => <ForecastDay day={day} key={day[0].date}/>)}\r\n      </Layout>\r\n    </SideMenu>\r\n  );\r\n};\r\n\r\nWeatherSideMenu.propTypes = PropTypes;\r\nWeatherSideMenu.defaultProps = DefaultProps;\r\n\r\nexport default WeatherSideMenu;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CardBody = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.4);\r\n  z-index: 10;\r\n  \r\n  background: ${props => props.theme.card || \"linear-gradient(to bottom, #BA28DB 0%, #AA18CB 100%)\"};\r\n`;\r\n\r\nconst Card = props => {\r\n  return (\r\n    <CardBody className={props.className}>{props.children}</CardBody>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, arrayOf, node, number} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  rows: arrayOf(number),\r\n  columns: arrayOf(number),\r\n  children: node\r\n};\r\n\r\nconst DefaultProps = {\r\n  rows: [1],\r\n  columns: [1]\r\n};\r\n\r\nconst Layout = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-rows: ${props => props.rows ? props.rows.join('fr ') + 'fr' : '1fr'};\r\n  grid-template-columns: ${props => props.columns ? props.columns.join('fr ') + 'fr' : '1fr'};\r\n`;\r\n\r\nconst GridLayout = props => {\r\n  return (\r\n    <Layout rows={props.rows} columns={props.columns}>{props.children}</Layout>\r\n  );\r\n};\r\n\r\nGridLayout.propTypes = PropTypes;\r\nGridLayout.defaultProps = DefaultProps;\r\n\r\nexport default GridLayout;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  children: string\r\n};\r\n\r\nconst DefaultProps = {\r\n  children: \"Title\"\r\n};\r\n\r\nconst TitleBody = styled.h2`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = props => {\r\n  return (\r\n    <TitleBody className={props.className}>{props.children}</TitleBody>\r\n  );\r\n};\r\n\r\nTitle.propTypes = PropTypes;\r\nTitle.defaultProps = DefaultProps;\r\n\r\nexport default Title;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, number} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  sunrise: number.isRequired,\r\n  sunset: number.isRequired\r\n};\r\n\r\nconst timeOptions = {hour: '2-digit', minute: '2-digit'};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst DayCycle = props => {\r\n  const sunrise = new Date(props.sunrise).toLocaleString('ru', timeOptions);\r\n  const sunset = new Date(props.sunset).toLocaleString('ru', timeOptions);\r\n\r\n  return (\r\n    <Container className={props.className}>\r\n      <p>{sunrise}</p>\r\n      <p>{sunset}</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nDayCycle.propTypes = PropTypes;\r\n\r\nexport default DayCycle;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, func} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  onClick: func.isRequired,\r\n  text: string\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"Toggle\"\r\n};\r\n\r\nconst Button = styled.button`\r\n  padding: 2px 6px;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: ${props => props.theme.additional || \"orangered\"};\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  &:active {\r\n    box-shadow: inset 0 0 2px 2px rgba(0, 0, 0, 0.4);\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst ToggleButton = props => {\r\n  return (\r\n    <Button onClick={props.onClick} className={props.className}>{props.text}</Button>\r\n  );\r\n};\r\n\r\nToggleButton.propTypes = PropTypes;\r\nToggleButton.defaultProps = DefaultProps;\r\n\r\nexport default ToggleButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, func} from \"prop-types\"\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  onClick: func.isRequired\r\n};\r\n\r\nconst Cross = styled.button`\r\n  position: relative;\r\n  width: 20px;\r\n  height: 20px;\r\n  background: transparent;\r\n  border: none;\r\n  \r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 1px;\r\n    top: calc(50% - 0.5px);\r\n    left: 0;\r\n    transform:  rotate(-45deg);\r\n    background: black;\r\n  }\r\n  \r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 100%;\r\n    top: 0;\r\n    left: calc(50% - 0.5px);\r\n    transform:  rotate(-45deg);\r\n    background: black;\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  &:active {\r\n    transform: translate(1px, 1px);\r\n  }\r\n`;\r\n\r\nconst CrossButton = props => {\r\n  return (\r\n    <Cross className={props.className} onClick={props.onClick} />\r\n  );\r\n};\r\n\r\nCrossButton.propTypes = PropTypes;\r\n\r\nexport default CrossButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, number, func} from \"prop-types\"\r\n\r\nimport Card from \"./Card\";\r\nimport GridLayout from \"../../../../GridLayout\";\r\nimport Title from \"./Title\";\r\nimport TempDisplay from \"./TempDisplay\";\r\nimport DayCycle from \"./DayCycle\";\r\nimport ToggleButton from \"./ToggleButton\";\r\nimport CrossButton from \"./CrossButton\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  cityName: string.isRequired,\r\n  temperature: number.isRequired,\r\n  weather: string.isRequired,\r\n  humidity: number.isRequired,\r\n  windSpeed: number.isRequired,\r\n  pressure: number.isRequired,\r\n  sunrise: number.isRequired,\r\n  sunset: number.isRequired,\r\n  remove: func.isRequired,\r\n  toggle: func.isRequired\r\n};\r\n\r\nconst StyledToggle = styled(ToggleButton)`\r\n  margin: 5px 15px;\r\n`;\r\n\r\nconst StyledCrossButton = styled(CrossButton)`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n`;\r\n\r\nconst StyledTempDisplay = styled(TempDisplay)`\r\n  align-self: center;\r\n  \r\n  @media (max-width: 599px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst WeatherCard = props => {\r\n  const { cityName, temperature, weather, humidity, windSpeed, pressure, sunrise, sunset } = props;\r\n  return (\r\n      <Card className={props.className}>\r\n        <StyledCrossButton onClick={props.remove}/>\r\n        <GridLayout rows={[1, 2, 3, 2, 1]}>\r\n          <Title>{cityName}</Title>\r\n          <StyledTempDisplay temperature={temperature}\r\n                       weather={weather}\r\n                       centered big/>\r\n          <WeatherInfo humidity={humidity}\r\n                       windSpeed={windSpeed}\r\n                       pressure={pressure}/>\r\n          <DayCycle sunrise={sunrise} sunset={sunset}/>\r\n          <StyledToggle text={\"Forecast\"} onClick={props.toggle}/>\r\n        </GridLayout>\r\n      </Card>\r\n  );\r\n};\r\n\r\nWeatherCard.propTypes = PropTypes;\r\n\r\nexport default WeatherCard;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, number, array, bool, func} from 'prop-types'\r\nimport WeatherSideMenu from \"./components/WeatherSideMenu\";\r\nimport WeatherCard from \"./components/WeatherCard\";\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  cityName: string.isRequired,\r\n  temperature: number.isRequired,\r\n  weather: string.isRequired,\r\n  humidity: number.isRequired,\r\n  windSpeed: number.isRequired,\r\n  pressure: number.isRequired,\r\n  sunrise: number.isRequired,\r\n  sunset: number.isRequired,\r\n  forecast: array,\r\n  remove: func.isRequired,\r\n  toggle: func.isRequired,\r\n  open: bool\r\n};\r\n\r\nconst DefaultProps = {\r\n  forecast: [],\r\n  open: false\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  display: grid;\r\n`;\r\n\r\nconst StyledSideMenu = styled(WeatherSideMenu)`\r\n  position: relative;\r\n  z-index: 3;\r\n  margin: 20px 20px 20px -20px;\r\n  border-radius: 0 5px 5px 0;\r\n  \r\n  @media (max-width: 899px) {\r\n    margin: -20px 20px 20px 20px;\r\n    border-radius: 0 0 5px 5px;\r\n  }\r\n`;\r\n\r\nconst StyledCard = styled(WeatherCard)`\r\n  position: relative;\r\n  z-index: 5;\r\n  margin: 20px;\r\n`;\r\n\r\nconst WeatherCardWithSideMenu = props => {\r\n  const { cityName, temperature, weather, humidity, windSpeed, pressure, sunrise, sunset, forecast } = props;\r\n\r\n  return (\r\n    <Container open={props.open} className={props.className}>\r\n      <StyledCard cityName={cityName}\r\n                   temperature={temperature}\r\n                   weather={weather}\r\n                   humidity={humidity}\r\n                   windSpeed={windSpeed}\r\n                   pressure={pressure}\r\n                   sunrise={sunrise}\r\n                   sunset={sunset}\r\n                   remove={props.remove}\r\n                   toggle={props.toggle}/>\r\n      {props.open && <StyledSideMenu forecast={forecast}/>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nWeatherCardWithSideMenu.propTypes = PropTypes;\r\nWeatherCardWithSideMenu.defaultProps = DefaultProps;\r\n\r\nexport default WeatherCardWithSideMenu;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  children: string\r\n};\r\n\r\nconst DefaultProps = {\r\n  children: \"Logo\"\r\n};\r\n\r\nconst Body = styled.h1`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 56px;\r\n  font-weight: bold;\r\n  color: ${props => props.theme.additional || \"orangered\"};\r\n  transform: rotate(-5deg);\r\n  \r\n  @media (max-width: 599px) {\r\n    font-size: 38px;\r\n  }\r\n`;\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <Body>{props.children}</Body>\r\n  );\r\n};\r\n\r\nLogo.propTypes = PropTypes;\r\nLogo.defaultProps = DefaultProps;\r\n\r\nexport default Logo;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, func} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  color: string,\r\n  pickTheme: func\r\n};\r\n\r\nconst DefaultProps = {\r\n  color: \"#555\",\r\n  pickTheme: () => {}\r\n};\r\n\r\nconst Button = styled.button`\r\n  position: relative;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  border: 0;\r\n  background: radial-gradient(farthest-side at 35% 35%, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.1)),\r\n              ${props => props.color};\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ShinyButton = ({ className, color, pickTheme}) => {\r\n  return (\r\n    <Button className={className}\r\n            color={color}\r\n            onClick={pickTheme}/>\r\n  );\r\n};\r\n\r\nShinyButton.propTypes = PropTypes;\r\nShinyButton.defaultProps = DefaultProps;\r\n\r\nexport default ShinyButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, object, func} from 'prop-types'\r\n\r\nimport ShinyButton from \"./components/ShinyButton\";\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  themes: object,\r\n  selectTheme: func\r\n};\r\n\r\nconst DefaultProps = {\r\n  themes: [{\r\n    placeholder: \"#555\"\r\n  }],\r\n  selectTheme: () => {}\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst validColors = /(#[0-9abcdef]{3,6})|(rgba?\\(.+\\))|(hsla?\\(.+\\))/i;\r\n\r\nconst ThemeSelector = ({ className, themes, selectTheme }) => {\r\n\r\n  const buttons = Object.keys(themes).map(theme => {\r\n    const currTheme = themes[theme];\r\n\r\n    let buttonColor = Object.keys(currTheme).map(themeColor => {\r\n      const color = currTheme[themeColor].match(validColors);\r\n      return color ? color[0] : \"\";\r\n    });\r\n    buttonColor = buttonColor.length === 1 ? buttonColor[0] : `linear-gradient(135deg, ${buttonColor.join(\",\")})`;\r\n\r\n    return <ShinyButton color={buttonColor}\r\n                        pickTheme={() => selectTheme(themes[theme])}\r\n                        key={theme} />\r\n  });\r\n\r\n  return (\r\n    <Container className={className}>\r\n      {buttons}\r\n    </Container>\r\n  );\r\n};\r\n\r\nThemeSelector.propTypes = PropTypes;\r\nThemeSelector.defaultProps = DefaultProps;\r\n\r\nexport default ThemeSelector;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {object, func} from 'prop-types'\r\n\r\nimport Logo from \"../Logo\";\r\nimport ThemeSelector from \"../ThemeSelector/ThemeSelector\";\r\n\r\nconst PropTypes = {\r\n  themes: object,\r\n  selectTheme: func\r\n};\r\n\r\nconst Header = styled.div`\r\n  position: relative;\r\n  z-index: 10;\r\n  padding: 5px;\r\n  border-radius: 2px 2px 0 0;\r\n  background: ${props => props.theme.main || \"#412198\"};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n  @media (max-width: 899px) {\r\n    flex-direction: column;\r\n    padding-top: 5%;\r\n  }\r\n  \r\n  @media (min-width: 900px) {\r\n    padding-left: 5%;\r\n  }\r\n`;\r\n\r\nconst ThemeAndLanguage = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  \r\n  @media (min-width: 900px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst WidgetHeader = props => {\r\n  return (\r\n    <Header>\r\n      <Logo>WeatherApp</Logo>\r\n      <ThemeAndLanguage>\r\n        <ThemeSelector themes={props.themes} selectTheme={props.selectTheme}/>\r\n      </ThemeAndLanguage>\r\n    </Header>\r\n  );\r\n};\r\n\r\nWidgetHeader.propTypes = PropTypes;\r\n\r\nexport default WidgetHeader;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {string, func} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  text: string.isRequired,\r\n  placeholder: string,\r\n  onSubmit: func.isRequired\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"Add\",\r\n  placeholder: \"\",\r\n  onSubmit: () => {}\r\n};\r\n\r\nconst Form = styled.form`\r\n  flex: 1;\r\n  display: grid;\r\n  grid-template-columns: 3fr 1fr;\r\n  grid-column-gap: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0 3px;\r\n  border: 2px solid ${props => props.theme.additional || \"orangered\"};\r\n  border-radius: 5px;\r\n  background: transparent;\r\n  color: white;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 2px 4px;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.4);\r\n  background: ${props => props.theme.additional || \"orangered\"};\r\n  \r\n  &:active {\r\n    transform: translate(1px, 1px);\r\n    box-shadow: none;\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nclass InputForm extends React.Component {\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      value: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.value);\r\n\r\n    this.setState({\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { placeholder, text, className } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className={className}>\r\n        <Input type={\"text\"}\r\n               value={this.state.value}\r\n               onChange={this.handleChange}\r\n               placeholder={placeholder}/>\r\n        <Button type={\"Submit\"}>{text}</Button>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nInputForm.propTypes = PropTypes;\r\nInputForm.defaultProps = DefaultProps;\r\n\r\nexport default InputForm","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\nimport {object, func, string} from 'prop-types'\r\n\r\nimport WeatherCardWithSideMenu from \"./components/WeatherCardWithSideMenu/WeatherCardWithSideMenu\";\r\nimport WidgetHeader from \"./WidgetHeader\";\r\nimport InputForm from \"./components/InputForm\";\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  cards: object,\r\n  increment: func.isRequired,\r\n  decrement: func.isRequired,\r\n  remove: func.isRequired,\r\n  add: func.isRequired\r\n};\r\n\r\nconst DefaultProps = {\r\n  cards: {},\r\n};\r\n\r\nconst Widget = styled.section`\r\n  position: relative;\r\n  width: 95%;\r\n  max-width: 1400px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.4);\r\n  display: grid;\r\n  \r\n  border: 2px solid ${props => props.theme.main || \"#412198\"};\r\n\r\n  @media (max-width: 599px) {\r\n    grid-template-rows: 100px minmax(400px, 1fr);\r\n  }\r\n\r\n  @media (min-width: 600px) and (max-width: 899px) {\r\n    grid-template-rows: 180px minmax(720px, 1fr);\r\n    width: 75%;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-template-rows: 140px minmax(560px, 1fr);\r\n  }\r\n`;\r\n\r\nconst WidgetBody = styled.div`\r\n  position: relative;\r\n  z-index: 5;\r\n  border-radius: 0 0 2px 2px;\r\n  box-shadow: inset 0 0 3px 3px rgba(0, 0, 0, 0.4);\r\n  display: grid;\r\n\r\n  background: ${props => props.theme.secondary || \"#7349E5\"};\r\n\r\n  @media (max-width: 599px) {\r\n    grid-auto-rows: 400px;\r\n  }\r\n\r\n  @media (min-width: 600px) and (max-width: 899px) {\r\n    grid-auto-rows: 720px;\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-auto-rows: 560px;\r\n  }\r\n`;\r\n\r\nconst WidgetInputField = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 10;\r\n  padding: 5px 10px;\r\n  border-radius: 0 0 5px 5px;\r\n  box-shadow: 0 0 3px 3px rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  \r\n  background: ${props => props.theme.main || \"#412198\"};\r\n`;\r\n\r\nconst StyledWeatherCard = styled(WeatherCardWithSideMenu)`\r\n  ${props => props.open ?\r\n  css`\r\n    @media (max-width: 899px) {\r\n       grid-row-end: span 4;\r\n       grid-template-rows: 1fr 3fr;\r\n    }\r\n     @media (min-width: 900px) {\r\n       grid-template-columns: 1fr 3fr;\r\n       grid-column-end: span 4;\r\n     }` : ''}\r\n`;\r\n\r\nconst WeatherWidget = ({ cards, increment, decrement, remove, add, className, themes, selectTheme }) => {\r\n  const weatherCards = Object.keys(cards).map(city => {\r\n    const card = cards[city];\r\n    return (\r\n      <StyledWeatherCard {...card}\r\n                         key={card.cityName}\r\n                         open={card.stage === 2}\r\n                         toggle={card.stage === 1 ? () => increment(city) : () => decrement(city)}\r\n                         remove={() => remove(city)}/>\r\n    )\r\n  });\r\n  return (\r\n    <Widget className={className}>\r\n      <WidgetHeader themes={themes} selectTheme={selectTheme}/>\r\n      <WidgetBody>\r\n        <WidgetInputField>\r\n          <InputForm text={\"Add City\"} onSubmit={add}/>\r\n        </WidgetInputField>\r\n        {weatherCards}\r\n      </WidgetBody>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nWeatherWidget.propTypes = PropTypes;\r\nWeatherWidget.defaultProps = DefaultProps;\r\n\r\nexport default WeatherWidget;","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\nimport {string, oneOf} from 'prop-types'\r\n\r\nconst PropTypes = {\r\n  className: string,\r\n  message: string.isRequired,\r\n  title: string.isRequired,\r\n  type: oneOf(['danger', 'warning'])\r\n};\r\n\r\nconst DefaultProps = {\r\n  type: 'danger'\r\n};\r\n\r\n\r\n\r\nconst Box = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n  width: 90%;\r\n  max-width: 450px;\r\n  padding: 12px 20px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4), inset 0 1px 0 0 rgba(240, 240, 240, 0.4);\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  justify-items: center;\r\n  border-radius: 3px;\r\n  color: rgb(255, 255, 255);\r\n  ${props => props.type}\r\n`;\r\n\r\nconst types = {\r\n  danger: css`\r\n    border: 1px solid rgb(151, 27, 27);\r\n    background: rgb(196, 84, 83);\r\n  `,\r\n  warning: css`\r\n    border: 1px solid rgb(183, 123, 1);\r\n    background: rgb(255, 195, 80);\r\n  `\r\n};\r\n\r\nconst Title = styled.p`\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst Popup = ({ className, type, title, message }) => {\r\n  return (\r\n    <Box className={className} type={types[type]}>\r\n      <Title>{title}</Title>\r\n      <p>{message}</p>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPopup.propTypes = PropTypes;\r\nPopup.defaultProps = DefaultProps;\r\nexport default Popup;","import React from 'react'\r\nimport Popup from \"../Popup\";\r\n\r\nconst ErrorPopup = () => {\r\n  return (\r\n    <Popup message={\"Check the spelling of the city name. Or try again later.\"}\r\n           title={\"Something went wrong!\"}\r\n           type={\"danger\"}/>\r\n  );\r\n};\r\n\r\nexport default ErrorPopup;","import React from 'react'\r\nimport Popup from \"../Popup\";\r\n\r\n\r\nconst WarningPopup = () => {\r\n  return (\r\n    <Popup message={\"Time info might be incorrect if time zone of a city is different from UTC-0. Sorry for inconvenience\"}\r\n           title={\"Beware of time info!\"}\r\n           type={\"warning\"}/>\r\n  );\r\n};\r\n\r\nexport default WarningPopup;","const API_KEY = \"trnsl.1.1.20190408T131030Z.aa191d583b07949e.33697662ad8fa451f72fb8c8a81952e676a4667f\";\r\nconst API_ENDPOINT = \"https://translate.yandex.net/api/v1.5/tr.json/translate\";\r\n\r\nasync function getTranslatedText(text) {\r\n  const encodedText = encodeURIComponent(text);\r\n\r\n  if (encodedText === text) return text;\r\n\r\n\r\n  const response = await fetch(`${API_ENDPOINT}?key=${API_KEY}&text=${encodedText}&lang=en`);\r\n  if (response.status !== 200) throw new Error(`${response.status}, ${response.statusText}`);\r\n\r\n  const jsonResponse = await response.json();\r\n  return jsonResponse.text[0];\r\n}\r\n\r\nexport default getTranslatedText;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { createGlobalStyle, ThemeProvider} from 'styled-components'\r\n\r\nimport getCurrentWeather, {getForecastWeather} from \"./Services/Weather/weatherAPICalls\";\r\nimport {getDifferenceWithCurrentZone} from \"./Services/TimeZone/timeZoneCalls\";\r\nimport themes from './themes'\r\nimport WeatherWidget from \"./components/WeatherWidget/WeatherWidget\";\r\nimport ErrorPopup from './components/Popups/ErrorPopup'\r\nimport WarningPopup from './components/Popups/WarningPopup'\r\nimport getTranslatedText from \"./Services/Translation/YaTranslate\";\r\n\r\nfunction setValuesToObjectProps(properties, value, object) {\r\n  properties = properties.slice();\r\n  while (properties.length) object[properties.pop()] = value;\r\n}\r\n\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nconst timesOfDay = {};\r\nsetValuesToObjectProps([6, 7, 8], 'Morning', timesOfDay);\r\nsetValuesToObjectProps([12, 13, 14], 'Afternoon', timesOfDay);\r\nsetValuesToObjectProps([21, 22, 23], 'Evening', timesOfDay);\r\nsetValuesToObjectProps([0, 1, 2], 'Night', timesOfDay);\r\n\r\nconst dateOptions = {month: '2-digit', day: '2-digit'};\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  padding: 5vh 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  background: ${props => props.theme.bgColor || \"linear-gradient(45deg, #7349e5 0%,#ad1283 76%,#ad1283 100%)\"};\r\n`;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    cards: {},\r\n    currentTheme: themes.theme1,\r\n    popupShowing: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storedCities = localStorage.getItem(\"weatherAppCitiesAdded\");\r\n    const storedCitiesArr = storedCities ? storedCities.split(\";\") : [];\r\n\r\n    storedCitiesArr.forEach(this.getWeather);\r\n  }\r\n\r\n  selectTheme = theme => {\r\n    this.setState({\r\n      currentTheme: theme\r\n    })\r\n  };\r\n\r\n  parseWeatherForecast = (forecastList, offset) => {\r\n    const validDates = [6, 7, 8, 12, 13, 14, 21, 22, 23, 0, 1, 2];\r\n\r\n    let result = [];\r\n\r\n    for (let i = 0, j = -1; i < forecastList.length; i++) {\r\n      const newDate = new Date( (forecastList[i].dt + offset) * 1000).getHours();\r\n\r\n      if ( newDate === 6 || newDate === 7 || newDate === 8) {\r\n        j++;\r\n        if (j === 4) break;\r\n\r\n        result[j] = [];\r\n      }\r\n\r\n      if (validDates.some(e => e === newDate) && j >= 0) result[j].push(forecastList[i]);\r\n    }\r\n\r\n    result = result.map(element => {\r\n      return element.map(e => {\r\n        let date = new Date( (e.dt + offset) * 1000);\r\n        return {\r\n          temperature: Math.round(e.main.temp),\r\n          pressure: Math.round(e.main.pressure * 0.75006375541921),\r\n          humidity: e.main.humidity,\r\n          windSpeed: e.wind.speed,\r\n          windDirection: e.wind.deg,\r\n          weather: e.weather[0].main,\r\n          timeOfDay: timesOfDay[date.getHours()],\r\n          date: date.toLocaleString('ru', dateOptions),\r\n          day: days[date.getDay()]\r\n        }\r\n      });\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  submitHandler = async value => {\r\n    let city;\r\n    try {\r\n      city = await getTranslatedText(value);\r\n\r\n      if (this.state.cards[city]) return;\r\n\r\n      await this.getWeather(city);\r\n      this.storeCity(city);\r\n\r\n    } catch(e) {\r\n      console.log(e);\r\n      this.showPopup('error');\r\n    }\r\n  };\r\n\r\n  incrementStage = city => {\r\n    if (this.state.cards[city].forecast.length === 0) this.getForecast(city);\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        cards: {\r\n          ...prevState.cards,\r\n          [city]: {\r\n            ...prevState.cards[city],\r\n            stage: prevState.cards[city].stage + 1\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  decrementStage = city => {\r\n    this.setState(prevState => {\r\n      return {\r\n        cards: {\r\n          ...prevState.cards,\r\n          [city]: {\r\n            ...prevState.cards[city],\r\n            stage: prevState.cards[city].stage - 1\r\n          }\r\n        }\r\n      }\r\n    })\r\n  };\r\n\r\n  removeCity = city => {\r\n    let cards = {...this.state.cards};\r\n    delete cards[city];\r\n\r\n    this.setState({\r\n      cards\r\n    });\r\n\r\n    this.removeStoredCity(city);\r\n  };\r\n\r\n  storeCity = city => {\r\n    const currentCities = localStorage.getItem(\"weatherAppCitiesAdded\") || \"\";\r\n    const newItem = currentCities ? \";\" + city : city;\r\n\r\n    localStorage.setItem(\"weatherAppCitiesAdded\", currentCities + newItem);\r\n  };\r\n\r\n  removeStoredCity = city => {\r\n    const storedCities = localStorage.getItem(\"weatherAppCitiesAdded\");\r\n    const filteredCities = storedCities ? storedCities.split(';').filter(elem => elem !== city) : [];\r\n    localStorage.setItem(\"weatherAppCitiesAdded\", filteredCities.join(\";\"));\r\n  };\r\n\r\n  showPopup = type => {\r\n    let popup;\r\n    switch(type) {\r\n      case 'error':\r\n        popup = <ErrorPopup/>;\r\n        break;\r\n      case 'warning':\r\n        popup = <WarningPopup/>;\r\n        break;\r\n      default:\r\n        popup = null;\r\n    }\r\n\r\n    this.setState({\r\n      popupShowing: popup\r\n    });\r\n    setTimeout(() => this.setState({popupShowing: null}), 3000);\r\n  };\r\n\r\n  getWeather = async city => {\r\n    const weather = await getCurrentWeather(city);\r\n\r\n    if (weather.cod !== 200 && weather.cod !== \"200\") throw new Error(`${weather.cod}, ${weather.message}`);\r\n\r\n    let timeZoneOffset;\r\n    try {\r\n      timeZoneOffset = await getDifferenceWithCurrentZone(weather.coord.lat, weather.coord.lon);\r\n    } catch(e) {\r\n      console.log(e.message);\r\n      this.showPopup('warning');\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        cards: {\r\n          ...prevState.cards,\r\n          [weather.name]: {\r\n            stage: 1,\r\n            cityName: `${weather.name}, ${weather.sys.country}` ,\r\n            temperature: Math.round(weather.main.temp),\r\n            pressure: Math.round(weather.main.pressure * 0.75006375541921),\r\n            humidity: weather.main.humidity,\r\n            windSpeed: weather.wind.speed,\r\n            windDirection: weather.wind.deg,\r\n            sunrise: (weather.sys.sunrise + timeZoneOffset) * 1000,\r\n            sunset: (weather.sys.sunset + timeZoneOffset) * 1000,\r\n            weather: weather.weather[0].main,\r\n            timeZoneOffset: timeZoneOffset,\r\n            forecast: []\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return true;\r\n  };\r\n\r\n  getForecast = async city => {\r\n   let weather = await getForecastWeather(city);\r\n\r\n   if (weather.cod !== \"200\" && weather.cod !== 200) return;\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        cards:{\r\n          ...prevState.cards,\r\n          [city]: {\r\n            ...prevState.cards[city],\r\n            forecast: this.parseWeatherForecast(weather.list, prevState.cards[city].timeZoneOffset)\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={this.state.currentTheme}>\r\n        <Container>\r\n          {this.state.popupShowing}\r\n          <GlobalStyles/>\r\n          <WeatherWidget cards={this.state.cards}\r\n                         themes={themes}\r\n                         selectTheme={this.selectTheme}\r\n                         add={this.submitHandler}\r\n                         decrement={this.decrementStage}\r\n                         increment={this.incrementStage}\r\n                         remove={this.removeCity}/>\r\n        </Container>\r\n      </ThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}